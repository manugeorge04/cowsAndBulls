{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/styles/makeStyles.js","webpack:///./src/components/GameFilter.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./src/pages/Home.js"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStyles","defaultTheme","useStyles","theme","root","display","borderBottom","game","padding","color","marginBottom","fontFamily","fontWeight","active","GameFilter","classes","url","window","location","href","replace","className","to","exact","style","textDecoration","Typography","substr","lastIndexOf","borderRight","paddingRight","variant","paddingLeft","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","props","ref","_props$align","align","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","Component","concat","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","Home","useContext","MyContext","subHeader","setSubHeader","useEffect"],"mappings":"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","file":"1.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    borderBottom: '0.1rem solid #000'\n  },\n  game: {\n    padding: '0.8rem',\n    color: '#000',\n    marginBottom: '1.2rem',\n    fontFamily: 'Comfortaa',\n    fontWeight: 300\n  },\n  active: {\n    fontWeight: 700\n  }\n}));\n\nconst GameFilter = () => {\n  const classes = useStyles();\n\n  const url = window.location.href.replace(/\\/$/, '');\n\n  return (\n    <div className={classes.root}>\n      <NavLink to=\"/\" exact={true} \n       style={{textDecoration: 'none'}}>\n        <Typography className={url.substr(url.lastIndexOf('/') + 1) === '#' ? `${classes.game} ${classes.active}` : `${classes.game}`}\n        style={{borderRight: '0.1rem solid #000', paddingRight: '1.2rem'}}\n        variant=\"h4\">Create Game</Typography>\n      </NavLink>\n      <NavLink to=\"/join\" \n      style={{textDecoration: 'none'}}>\n        <Typography className={url.substr(url.lastIndexOf('/') + 1) === 'join' ? `${classes.game} ${classes.active}` : `${classes.game}`} style={{paddingLeft: '1.2rem'}}\n        variant=\"h4\">Join Game</Typography>\n      </NavLink>\n    </div>\n  )\n};\n\nexport default GameFilter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React, { useEffect, useContext } from 'react';\n\nimport GameFilter from '../components/GameFilter';\nimport MyContext from '../context/MyContext';\n\nconst Home = () => {\n\n  const {subHeader, setSubHeader} = useContext(MyContext)\n  useEffect(() => {\n    setSubHeader(\"Home Page\");\n  }, [subHeader]);\n\n  return (\n    <div>\n      <GameFilter/>\n    </div>\n  )\n};\n\nexport default Home;"],"sourceRoot":""}