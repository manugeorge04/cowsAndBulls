{"version":3,"sources":["webpack:///./src/components/RoundUpRoom.js","webpack:///./src/components/TeamOne.js","webpack:///./src/components/TeamTwo.js","webpack:///./src/components/BullfightPlayerList.js","webpack:///./src/components/LobbyCard.js","webpack:///./src/pages/Lobby.js"],"names":["useStyles","makeStyles","theme","root","display","borderBottom","game","padding","color","fontFamily","fontWeight","active","RoundUpRoom","props","data","classes","className","Typography","variant","width","borderRight","height","position","team","backgroundColor","players","isPC","fontSize","playerDiv","top","left","transform","TeamOne","teamA","swap","firstSwap","dragOver","e","preventDefault","dragStart","player","drop","val","length","map","index","key","draggable","onDragOver","onDrop","onDragStart","onTouchStart","onTouchMove","onTouchEnd","TeamTwo","teamB","BullfightPlayerList","slice","Math","ceil","margin","boxShadow","border","button","marginBottom","textTransform","cowputer","herds","flexDirection","teamDiv","buttonDiv","justifyContent","alignItems","LobbyCard","useContext","MyContext","socket","currentGame","setCurrentGame","mode","roomId","useMediaQuery","noSsr","Card","teamPlayers","isPc","useState","setPlayers","swappableFirstItem","setSwappableFirstItem","useEffect","swappableSecondItem","firstIndex","indexOf","secondIndex","newPlayers","CardContent","Button","onClick","randomPlayers","i","j","floor","random","style","marginTop","to","exact","textDecoration","EachModeContent","component","Link","currentRound","emit","handleStartGame","Lobby","subHeader","setSubHeader","users","match","params"],"mappings":"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","file":"14.bundle.js","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    borderBottom: '0.1rem solid #000'\n  },\n  game: {\n    padding: '0.8rem',\n    color: '#000',\n    fontFamily: 'Comfortaa',\n    fontWeight: 300\n  },\n  active: {\n    fontWeight: 700\n  }\n}));\n\nconst RoundUpRoom = (props) => {\n  const { data } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Typography className={`${classes.game}`}\n        variant=\"h4\">{data}</Typography>\n    </div>\n  )\n};\n\nexport default RoundUpRoom;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '50%',\n    borderRight: '0.2rem solid #000',\n    height: '40rem',\n    padding: '2rem',\n    position: 'relative'\n  },\n  team: {\n    backgroundColor: '#f3f3f3ff',\n    padding: '1.5rem'\n  },\n  players: {\n    padding: props => props.isPC ? '2rem' : '2rem 0',\n    fontSize: props => !props.isPC && '1.8rem'\n  },\n  playerDiv: {\n    position: 'absolute',\n    top: '60%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}));\n\n\nconst TeamOne = (props) => {\n  const { teamA, swap, firstSwap, isPC } = props;\n  const classes = useStyles({\n    isPC\n  });\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const dragStart = (e, player) => {\n    firstSwap(player);\n  }\n\n  const drop = (e, val) => {\n    swap(val);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.team}\n      >Team A</Typography>\n       <div className={classes.playerDiv}\n       >\n        {teamA.length > 0 && teamA.map((player, index) => (\n        <Typography key={index} variant=\"h4\" draggable\n        onDragOver={(e)=> dragOver(e)}\n        onDrop={(e) => drop(e,player)}\n        onDragStart={(e) => dragStart(e, player)}\n        onTouchStart={(e) => dragStart(e, player)}\n        onTouchMove={(e)=> dragOver(e)}\n        onTouchEnd={(e) => drop(e,player)} \n        className={classes.players}>{player}</Typography>\n      ))}\n      </div>\n    </div>\n  )\n};\n\nexport default TeamOne;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '50%',\n    height: '40rem',\n    padding: '2rem',\n    position: 'relative'\n  },\n  team: {\n    backgroundColor: '#f3f3f3ff',\n    padding: '1.5rem'\n  },\n  players: {\n    padding: props => props.isPC ? '2rem' : '2rem 0',\n    fontSize: props => !props.isPC && '1.8rem'\n  },\n  playerDiv: {\n    position: 'absolute',\n    top: '60%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}));\n\nconst TeamTwo = (props) => {\n  const { teamB, swap, firstSwap, isPC } = props;\n  const classes = useStyles({\n    isPC\n  });\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const dragStart = (e, player) => {\n    firstSwap(player);\n  }\n\n  const drop = (e, val) => {\n    swap(val)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.team} draggable \n      >Team B</Typography>\n      <div className={classes.playerDiv}\n       >\n      {teamB.length > 0 && teamB.map((player, index) => (\n        <Typography key={index} variant=\"h4\" draggable \n        onDragOver={(e)=> dragOver(e)}\n        onDrop={(e) => drop(e,player)}\n        onDragStart={(e) => dragStart(e, player)}\n        onTouchStart={(e) => dragStart(e, player)}\n        onTouchMove={(e)=> dragOver(e)}\n        onTouchEnd={(e) => drop(e,player)}\n        className={classes.players}>{player}</Typography>\n      ))}\n      </div>\n    </div>\n  )\n};\n\nexport default TeamTwo;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: props => props.isPC ? '2rem' : '0',\n    display: 'flex',\n    height: '50rem',\n  },\n  players: {\n    padding: props => props.isPC ? '3.5rem' : '4rem 3.5rem'\n  },\n  playerDiv: {\n    width: '50%',\n  }\n}));\n\n// const players = ['mahathi amencherla', \"fknldgeklg\"]\nconst BullfightPlayerList = (props) => {\n  const { players, isPC } = props;\n  const classes = useStyles(props);\n\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.playerDiv}>\n      {players.length > 0 && players.slice(0,Math.ceil(players.length/2)).map((player, index) => (\n        <Typography key={index} variant=\"h3\" \n         className={classes.players}>{player}</Typography>\n      ))}\n      </div>\n      <div className={classes.playerDiv}>\n      {players.length > 0 && players.slice(Math.ceil(players.length/2), players.length).map((player, index) => (\n        <Typography key={index} variant=\"h3\" \n         className={classes.players}>{player}</Typography>\n      ))}\n      </div>\n    </div>\n  )\n};\n\nexport default BullfightPlayerList;","import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { NavLink, Link } from 'react-router-dom';\n\nimport TeamOne from './TeamOne';\nimport TeamTwo from './TeamTwo';\nimport BullfightPlayerList from './BullfightPlayerList';\nimport MyContext from '../context/MyContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: props => props.isPC ? '50%' : '90%',\n    margin: '2rem auto',\n    boxShadow: '0px 0px 17px 1px #1D1F26',\n    backgroundColor: '#fff',\n    border: '0.1rem solid #000',\n    height: props => props.isPC ? '50rem' : '48rem',\n    position: 'relative'\n  },\n  button: {\n    fontSize: '2.4rem',\n    width: props => props.isPC ? '45%' : '50%',\n    backgroundColor: '#0b5394',\n    boxShadow: '0px 0px 11px 1px #1D1F26',\n    color: \"#fff\",\n    marginBottom: '1.2rem',\n    fontWeight: 300,\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#073763ff'\n    },\n  },\n  cowputer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  herds: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 0\n  },\n  teamDiv: {\n    borderBottom: '0.2rem solid #000',\n    display: 'flex',\n  },\n  buttonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '50%',\n    margin: '0 auto',\n    marginBottom: '1.2rem',\n    flexDirection: props => !props.isPC && 'column'\n  }\n}));\n\nconst EachModeContent = (mode, isPC, teamPlayers) => {\n\n  const props = {\n    isPc: isPC\n  }\n\n  const classes = useStyles(props);\n  const [players, setPlayers] = useState([]);\n  const [swappableFirstItem, setSwappableFirstItem] = useState(\"\");\n\n  useEffect(() => {\n    setPlayers(teamPlayers)\n  }, [teamPlayers])\n\n  const swap = (swappableSecondItem) => {\n    const firstIndex = players.indexOf(swappableFirstItem);\n    const secondIndex = players.indexOf(swappableSecondItem);\n    let newPlayers = [...players];\n    [newPlayers[firstIndex], newPlayers[secondIndex]] = [newPlayers[secondIndex], newPlayers[firstIndex]];\n    setPlayers(newPlayers)\n  }\n\n  const randomize = () => {\n    let randomPlayers = [...players];\n    for (let i = randomPlayers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [randomPlayers[i], randomPlayers[j]] = [randomPlayers[j], randomPlayers[i]];\n    }\n\n    setPlayers(randomPlayers)\n  }\n\n  if(mode === 'cowputer') {\n    return (\n      <CardContent className={classes.cowputer}>\n        <Typography variant=\"h2\">All players ready!</Typography>\n        <Typography variant=\"h4\">(It's just you)</Typography>\n      </CardContent>\n    )\n  } else if (mode === 'herds') {\n    return (\n      <CardContent className={classes.herds}>\n        <div className={classes.teamDiv}>\n          <TeamOne teamA={players.slice(0,4)} swap={swap}\n          firstSwap={setSwappableFirstItem} isPC={isPC}/>\n          <TeamTwo teamB={players.slice(4,8)} swap={swap}\n          firstSwap={setSwappableFirstItem} isPC={isPC}/>\n        </div>\n        <Button className={classes.button} onClick={randomize}\n        style={{width: isPC ? '40%' : '80%', boxShadow: 'none', margin: '0 auto',\n        marginTop: isPC ? '2rem' : '1rem'}}>Randomize Herds</Button>\n      </CardContent>\n    )\n  } else if (mode === 'bullfight') {\n    return (\n      <CardContent>\n         {players.length > 0 && <BullfightPlayerList players={players} isPC={isPC}/>}\n      </CardContent>\n    )\n  } else {\n    return (\n      <CardContent className={classes.cowputer}>\n        <Typography variant=\"h2\">Uh oh! Looks like you've navigated to a page that doesn't exist.</Typography>\n        <NavLink to=\"/join\" exact={true} \n       style={{textDecoration: 'none'}}>\n         <Typography variant=\"h4\">Go back</Typography>\n         </NavLink>\n      </CardContent>\n    )\n  }\n}\n\nconst LobbyCard = (props) => {\n  const {socket, currentGame, setCurrentGame} = useContext(MyContext)\n  const { players, mode, roomId } = props;\n  const isPC = useMediaQuery(\"(min-width:768px)\", {noSsr:true})  \n  const classes = useStyles({...props,isPC});\n\n  const handleStartGame = (mode, roomId, socket) => {\n    if (mode === \"cowputer\"){\n      setCurrentGame({\n        ...currentGame,\n        currentRound: 1\n      })\n      socket.emit('createWord', roomId)\n    }else {\n      return\n    }\n    \n  }\n\n  return (\n    <Fragment>\n      <Card className={classes.root}>\n        {EachModeContent(mode, isPC, players)}\n      </Card>\n      <div className={classes.buttonDiv}>\n      <Button className={classes.button}\n       component={Link} to={`/`} >\n         {/* delete room in this  */}\n        Leave Lobby</Button>\n      <Button className={classes.button}\n       component={Link} to={`/${mode}/${roomId}`} \n       onClick = {() => handleStartGame(mode, roomId, socket)}   >\n        Start Game</Button>\n      </div>\n    </Fragment>\n  )\n};\n\nexport default LobbyCard;","import React,{ useEffect, useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nimport RoundUpRoom from '../components/RoundUpRoom';\nimport LobbyCard from '../components/LobbyCard';\n\nconst Lobby = (props) =>{\n  const { subHeader, setSubHeader, users,} = useContext(MyContext); \n  \n  useEffect(() => {\n    setSubHeader(`Playing ${props.match.params.mode}`);\n  }, [subHeader]);\n\n  // useEffect(() => {\n\n  // }, [users])\n\n\n  return (\n    <div>\n      <RoundUpRoom data={'Round Up Room'}/>\n      <LobbyCard players={users} mode={props.match.params.mode} roomId={props.match.params.roomId}/>\n    </div>\n  );\n}\n\nexport default Lobby;\n"],"sourceRoot":""}