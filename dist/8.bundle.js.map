{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./src/pages/NotFound.js"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","Component","root","concat","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","Button","children","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","focusRipple","focusVisible","label","boxSizing","minWidth","padding","borderRadius","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","action","hoverOpacity","alignItems","justifyContent","textPrimary","textSecondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","useStyles","makeStyles","fontWeight","textTransform","NotFound","useContext","MyContext","subHeader","setSubHeader","useEffect","document","body","style","backgroundImage","background","Link","to"],"mappings":"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","file":"8.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React, {useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MyContext from '../context/MyContext';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({  \n  button: {\n    fontSize: '2.4rem',\n    width: '50%',\n    backgroundColor: '#0b5394',\n    color: \"#fff\",    \n    fontWeight: 300,\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#073763ff'\n    }\n  }\n});\n\nconst NotFound = () => {\n  const classes = useStyles()\n  const { subHeader, setSubHeader } = useContext(MyContext);  \n  useEffect(() => {\n    setSubHeader(\"Error Page\");\n    document.body.style.backgroundImage = \"url('images/background.png')\";    \n\n    return function cleanup() {\n      document.body.style.background = \"linear-gradient(#f2f2f2ff, #a6a6a6ff)\" //($light-grey, $dark-grey);\n    };\n  }, [subHeader]);\n\n  return (\n    <div className={'NotFoundPage'}>\n      <Typography variant=\"h1\" align=\"center\" paragraph={true} >\n        Error 404\n      </Typography>\n      <Typography variant=\"h2\" align=\"center\" paragraph={true} >\n        Holy Cow!     \n      </Typography>\n      <Typography variant=\"h2\" align=\"center\" paragraph={true} >\n        The webpage you’re looking for doesn’t seem to be on this farm.\n      </Typography>\n      <Typography variant=\"h2\" align=\"center\" paragraph={true} >\n        Please check your sources and moo on to the correct one!\n      </Typography>\n      <Button component={Link} to=\"/\" className={classes.button}>\n        Go Home\n      </Button>\n    </div>\n  )\n};\n\nexport default NotFound;\n"],"sourceRoot":""}